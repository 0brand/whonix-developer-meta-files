#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x

true "INFO: Currently running script: $BASH_SOURCE${1+"$@"}"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$MYDIR"

source ../../../help-steps/pre
source ../../../help-steps/variables

locally-upgrade-whonix-debian-packages() {
   trap "errorhandlerunchrootunpreventunmount" ERR INT TERM

   if [ "$WHONIX_BUILD_USE_AUTO_LOCAL_SIGNING_KEY" = "1" ]; then
      if [ ! -f "$WHONIX_LOCAL_SIGNING_KEY_FOLDER/done" ]; then
         error "${red}${bold}$BASH_SOURCE ERROR: $WHONIX_LOCAL_SIGNING_KEY_FOLDER/done does not exist. Most likely build-steps.d/1200_create-debian-packages has not been run yet.${reset}"
      fi
   fi

   ## Lockfile for whonixcheck.
   touch "/var/run/package_manager_lock"

   sync

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/mount-raw"
   #"$WHONIX_SOURCE_HELP_STEPS_FOLDER/prevent-daemons-from-starting"

   if [ "$CI" = "true" ]; then
      ## We should mount /etc/resolv.conf.backup to /etc/resolv.conf to make network functional.
      ## (Nonfunctional in the first place because we installed the /etc/resolv.conf from
      ##  whonix-gateway/workstation-files package and didn't reboot.)
      true "INFO $BASH_SOURCE: Not setting WHONIX_CHROOT_MOUNT_RESOLV_CONF to 0, because CI detected."
   else
      export WHONIX_CHROOT_MOUNT_RESOLV_CONF="0"
   fi
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/chroot-raw"

   sync

   ## Sanity test.
   $CHROOT sync

   sync

   ## Backup exiting /etc/apt/sources.list, might be useful for bare metal users.
   ## No longer required, we are no longer shipping /etc/apt/sources.list.
   #if [ -f "$CHROOT_FOLDER/etc/apt/sources.list" ]; then
      #cp --no-clobber --recursive --preserve "$CHROOT_FOLDER/etc/apt/sources.list" "$CHROOT_FOLDER/etc/apt/sources.list.backup"
   #fi

   ## We have to manually fix /etc/apt/sources.list, because the list which comes with
   ## grml-debootstrap is incomplete (does not complain debian security repository) and points to 127.0.0.1.

   if [ "$CI" = "true" ]; then
      ## Workaround for Travis CI.
      ## This would mess up Ubuntu precise with Debian testing packages.
      true "INFO $BASH_SOURCE: Not using $WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/sources.list.whonix because CI detected."
   else
      ## This file doesn't include Whonix's APT repository.
      cp "$WHONIX_SOURCE_FOLDER/packages/anon-apt-sources-list/etc/apt/sources.list.d/debian.list" "$CHROOT_FOLDER/etc/apt/sources.list.d/"
   fi

   ## Not using any /etc/apt/preferences.d snippets at the moment.
   #cp "$WHONIX_SOURCE_FOLDER/packages/...todo.../etc/apt/preferences.d/"* "$CHROOT_FOLDER/etc/apt/preferences.d/"

   ## Not using any important /etc/apt/apt.conf.d snippets at the moment.
   #cp "$WHONIX_SOURCE_FOLDER/packages/...todo.../etc/apt/apt.conf.d/"* "$CHROOT_FOLDER/etc/apt/apt.conf.d/"

   if [ "$CI" = "true" ]; then
      # export, so create-local-temp-apt-repo can read it
      export whonix_build_no_upstream_sources_list="1"
   fi

   ## Implemented in help-steps/pre.
   aptcachemaybeenable

   sync

   ## Upgrade from regular repository.
   ## Out commented. Instructions leave that to the user. This is better,
   ## because this script would fail if some repository would not be reachable,
   ## such as torproject's Tor 0.2.4 apt repository.
   #if [ "$CI" = "true" ]; then
      #true "INFO $BASH_SOURCE: skipping apt-get update and apt-get dist-upgrade, because CI detected."
      #true "INFO $BASH_SOURCE: (Would try to upgrade using Ubuntu precising using /etc/apt/sources.list containing Debian testing.)"
   #else
      #$CHROOT apt-get $apt_timeout_opts update

      #$CHROOT apt-get $apt_timeout_opts --yes dist-upgrade
   #fi

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/create-local-temp-apt-repo"

   ## Check if we are running on a Whonix-Gateway.
   if [ -f "/usr/share/anon-gw-base-files/gateway" ]; then
      true 'INFO: We are running on a Whonix-Gateway, setting UWT_DEV_PASSTHROUGH="0", ok.'

      ## Someone trying to update Whonix-Gateway from source code. By default,
      ## export UWT_DEV_PASSTHROUGH="1" has been set in help-steps/variables.
      ## This won't work from within an installed Whonix-Gateway, because it by
      ## design does not have functional system DNS.
      export UWT_DEV_PASSTHROUGH="0"
   fi

   ## Debugging.
   $CHROOT apt-key finger

   ## Reading [apt repository containing snapshot.debian.org and] local repository containing Whonix's packages.
   $CHROOT apt-get $apt_sourcelist_empty $apt_sourceparts $apt_timeout_opts $apt_verify_opts -o APT::Get::List-Cleanup="0" update

   ## Upgrade Whonix Debian Packages.
   #$CHROOT apt-get $apt_sourcelist_empty $apt_sourceparts $apt_timeout_opts $apt_verify_opts --yes dist-upgrade

   #$CHROOT apt-get $apt_sourcelist_empty $apt_sourceparts $apt_timeout_opts $apt_verify_opts -f install

   if [ "$WHONIX_BUILD_GATEWAY" = "1" ]; then
      $CHROOT apt-get $apt_sourcelist_empty $apt_sourceparts $apt_timeout_opts $apt_verify_opts --yes install \
         whonix-gateway-packages-dependencies-pre \
         anon-shared-build-apt-sources-tpo \
         anon-shared-build-upgrade-torsocks \
         anon-shared-build-fix-grub \
         anon-shared-build-log-build-version \
         anon-shared-build-remember-sources \
         anon-shared-build-ban-nonfree \
         anon-shared-build-sanity-checks \
         anon-shared-packages-dependencies \
         anon-shared-packages-recommended \
         anon-shared-desktop \
         anon-shared-desktop-kde \
         anon-shared-kde-accessibility \
         whonix-shared-packages-dependencies \
         whonix-shared-packages-recommended \
         anon-gw-build-upgrade-tor \
         anon-gateway-packages-dependencies \
         anon-gateway-packages-recommended \
         whonix-gateway-packages-dependencies \
         whonix-gateway-packages-recommended
   elif [ "$WHONIX_BUILD_WORKSTATION" = "1" ]; then
      $CHROOT apt-get $apt_sourcelist_empty $apt_sourceparts $apt_timeout_opts $apt_verify_opts --yes install \
         whonix-workstation-packages-dependencies-pre \
         anon-shared-build-apt-sources-tpo \
         anon-shared-build-upgrade-torsocks \
         anon-shared-build-fix-grub \
         anon-shared-build-log-build-version \
         anon-shared-build-remember-sources \
         anon-shared-build-ban-nonfree \
         anon-shared-build-sanity-checks \
         anon-shared-packages-dependencies \
         anon-shared-packages-recommended \
         anon-shared-desktop \
         anon-shared-desktop-kde \
         anon-shared-kde-accessibility \
         whonix-shared-packages-dependencies \
         whonix-shared-packages-recommended \
         anon-workstation-packages-dependencies \
         anon-workstation-packages-recommended \
         whonix-workstation-packages-dependencies \
         whonix-workstation-packages-recommended
   else
      local MSG="${bold}${red}$BASH_SOURCE ERROR: VMNAME is neither Whonix-Gateway nor Whonix-Workstation. Please report this bug! ${reset}"
      echo "$MSG"
      bug "$MSG"
   fi

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/remove-local-temp-apt-repo"

   ## Forget about local repository containing Whonix's packages.
   $CHROOT apt-get --no-download --list-cleanup update

   $CHROOT sync
   sync

   ## Implemented in help-steps/pre.
   apt_cache_disable

   ## Remove lockfile for whonixcheck.
   rm --force "/var/run/package_manager_lock"

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/unchroot-raw"
   #"$WHONIX_SOURCE_HELP_STEPS_FOLDER/unprevent-daemons-from-starting"
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/unmount-raw"

   sync
}

true "${bold}INFO: Currently running script: $BASH_SOURCE ${1+"$@"}${reset}"
locally-upgrade-whonix-debian-packages
benchmarktimeend ## sets benchmark_took_time (implemented in help-steps/pre)
true "${bold}INFO: End of: $BASH_SOURCE | $whonix_build_error_counter error(s) detected. (benchmark: $benchmark_took_time)${reset}"
