#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e
set -o pipefail
set -o errtrace

true "INFO: Currently running script: $BASH_SOURCE${1+"$@"}"

build_all_error_handler() {
   : echo "
${red}${bold}BASH_COMMAND${reset}: $BASH_COMMAND
${red}${bold}ERROR $BASH_SOURCE: | caller: $(caller)${reset}
"
   echo "Press enter to continue or ctrl +c to break or enter to continue."
   read temp
}

trap "build_all_error_handler" ERR
set +e

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
my_pkg_name="$(basename "$(dirname "$MYDIR")")"

cd "$MYDIR"
cd ..

## Source make-helper.bsh to get function make_get_variables.
source ../genmkfile/usr/share/genmkfile/make-helper.bsh

cd ..

counter=0

nothing_to_commit_msg="On branch master
nothing to commit, working directory clean"

repo_skip() {
   if [ "$reponame" = "$1" ]; then
      true "Skipping $reponame."
      return 1
   fi
}

pkg_readme_creator() {
   if [ ! -f "$item/debian/control" ]; then
      true "No file"
      return
   fi

   generic_readme="../whonix-developer-meta-files/README_generic.md"
   test -f "$generic_readme"

   local readme_file line first_word matched

   if [ -f "$item/README_generic.md" ]; then
      ## When there is a README_generic.md, this is a way to express
      ## "do not create a generic README.md for that package, because it
      ## already has a real readme."
      readme_file="$item/README_generic.md"
   else
      readme_file="$item/README.md"
   fi

   rm --force "$readme_file"

   matched="false"

   while read -r line; do
      read -r first_word _ <<< "$line"
      if [ "$matched" = "true" ]; then
         if [ "$line" = "." ]; then
            echo "" >> "$readme_file"
         else
            echo "$line" >> "$readme_file"
         fi
      fi
      if [ "$first_word" = "Description:" ]; then
         matched="true"
         line_with_keyword="$(echo "$line" | awk -F ":" '{ print $2 }')"
         echo "#$line_with_keyword #" >> "$readme_file"
         echo "" >> "$readme_file"
      fi
   done < "$item/debian/control"

   echo "" >> "$readme_file"
   echo '(This package description has been [automatically](https://github.com/Whonix/whonix-developer-meta-files/blob/master/debug-steps/packaging-helper-script) extracted and mirrored from `debian/control`.)' >> "$readme_file"
   echo "" >> "$readme_file"

   if [ -d "$item/man" ]; then
      echo "# Manual Page #" >> "$readme_file"
      echo "" >> "$readme_file"
      echo 'See also `man` folder for more information.' >> "$readme_file"
      echo "" >> "$readme_file"
   fi

   while read -r line; do
      echo "$line" >> "$readme_file"
   done < "$generic_readme"

   true "Done: $readme_file"
}

pkg_links_echo() {
   echo "https://github.com/Whonix/$reponame"
   #echo "https://github.com/adrelanos/$reponame"
}

pkg_echo_commits_adrelanos() {
   echo "https://github.com/Whonix/$reponame/commits?author=adrelanos"
}

pkg_names_echo() {
   echo "$reponame"
}

pkg_links_open() {
   torbrowser --new-tab "$(pkg_links_echo)"
}

pkg_twitter_to_github() {

#   echo "\
#{
#  "name": "web",
#  "active": true,
#  "events": [
#    "push",
#    "pull_request"
#  ],
#  "config": {
#    "url": "http://example.com/webhook",
#    "content_type": "json"
#  }
#}" > /tmp/xxx789

   echo "\
 {
    \"name\": \"twitter\",
    \"events\": [
      \"push\"
    ],
    \"supported_events\": [
      \"push\"
    ],
    \"title\": \"Twitter\",
    \"schema\": [
      [
        \"string\",
        \"1280368298-pfu7jKs5EwAq8JUlce9efKVURNIzH7BwtQkv78F\"
      ],
      [
        \"string\",
        \"NLRQlofXcg78Oo8B4ATmtQ3Njhx4rn9O4enWhSs\"
      ],
      [
        \"false\",
        \"digest\"
      ],
      [
        \"boolean\",
        \"short_format\"
      ]
    ]
  }" > /tmp/xxx789


   #POST /repos/:owner/:repo/hooks

   #curl -X POST -d @/tmp/xxx789 http://example.com/path/to/resource --header "Content-Type:application/json"

   #curl -v -u adrelanos:$gh_token -X POST https://api.github.com/authorizations --data @/tmp/xxx789

   curl -v -H "Authorization: token $gh_token" -X POST https://api.github.com/orgs/Whonix/repos --data @/tmp/xxx789

   true "press enter"
   read temp
}

pkg_git_remotes_add() {
   git remote rm adre || true
   git remote rm troubadoour || true
   git remote rm origin || true
   git remote add adre git@github.com:adrelanos/$reponame.git
   git remote add troubadoour git@github.com:troubadoour/$reponame.git
   git remote add origin git@github.com:Whonix/$reponame.git
   git remote -v
   true
}

pkg_git_branch_Whonix12() {
   git checkout master
   git branch Whonix12 || true
   true
}

pkg_git_diff_branch_Whonix12() {
   git checkout master
   git diff Whonix12 || true
   true
}

pkg_git_update_branch_Whonix12() {
   git checkout master
   git checkout Whonix12
   git merge --ff-only master
   git checkout master
   true
}

pkg_git_branch_checkout_master() {
   git checkout master
   true
}

pkg_git_diff_branch_master() {
   git diff master
   true
}

pkg_git_diff_branch_development() {
   git diff development || true
   true
}

pkg_packaging_copy() {
   repo_skip "genmkfile" || return 0

   cp "../genmkfile/usr/share/genmkfile/Makefile" "./"

   git add "./Makefile"
   git rm "./make-helper.bsh"

   git commit -m "updated makefile generic to version 1.5"

   true
}

pkg_packaging_files_diff() {
   local compare_with_path
   compare_with_path=".."
   compare_with_path="./anon-apt-sources-list"

   if [ "$item" = "./qubes-whonix" ]; then
      test -f "$item/CONTRIBUTING.md"
   else
      diff "$compare_with_path/CONTRIBUTING.md" "$item/"
   fi
   diff "$compare_with_path/GPLv3" "$item/"
   diff "$compare_with_path/Makefile" "$item/"
   diff "$compare_with_path/make-helper.bsh" "$item/"

   if [ ! -f "$compare_with_path/COPYING" ]; then
      error "$compare_with_path/COPYING does not exist."
   fi

   if [ ! -f "$item/README.md" ]; then
      if [ ! -f "$item/README.mediawiki" ]; then
         error "Neither $item/README.md nor $item/README.mediawiki exist."
      fi
   fi

   diff "$compare_with_path/debian/source/format" "$item/debian/source/format"
   diff "$compare_with_path/debian/compat" "$item/debian/compat"
   diff "$compare_with_path/debian/gain-root-command" "$item/debian/gain-root-command"
   diff "./$item/COPYING" "$item/debian/copyright"

   if [ ! -f "$item/debian/changelog" ]; then
      error "$item/debian/changelog does not exist."
   fi
   if [ ! -f "$item/debian/control" ]; then
      error "$item/debian/control does not exist."
   fi
   if [ ! -f "$item/debian/copyright" ]; then
      error "$item/debian/copyright does not exist."
   fi
   if [ ! -f "$item/debian/rules" ]; then
      error "$item/debian/rules does not exist."
   fi
   if [ ! -f "$item/debian/watch" ]; then
      error "$item/debian/watch does not exist."
   fi
   true
}

pkg_git_push_remotes() {
   git push adre master &
   git_pid="$!"
   #wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   git push adre Whonix12 &
   git_pid="$!"
   #wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   git push origin master &
   git_pid="$!"
   #wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   git push origin Whonix12 &
   git_pid="$!"
   ##wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   true
}

pkg_git_commmit_readme() {
   git add README.md
   git add debian/changelog
   git diff --cached
   msg="readme"
   git commit -m "$msg" || true
   git status
}

pkg_git_commit_changelog() {
   git add debian/changelog
   git add changelog.upstream
   msg="bumped changelog version"
   git commit -m "$msg"
   git status
   true
}

pkg_git_commit_packaging() {
   git add Makefile
   git add make-helper.bsh
   #git add debian/changelog
   #git add changelog.upstream
   #git add -u
   msg="updated makefile generic to version 1.5"
   git commit -m "$msg"
   git status
   true
}

pkg_add_dh_changelogs_override_to_debian_rules() {
   echo "
override_dh_installchangelogs:
	dh_installchangelogs changelog.upstream upstream" >> "debian/rules"
   true
}

pkg_git_diff_and_commit() {
   #git reset --hard
   #continue

   ## Remove extra new lines.
   ## Thanks to llua http://unix.stackexchange.com/a/81689
   #a=$(<debian/rules); printf '%s\n' "$a" > debian/rules
   #continue

   returned="$(git status)"
   if [ "$returned" = "$nothing_to_commit_msg" ]; then
      true "press enter to continue_not"
      #read temp
      return
   fi

   #git add -A
   #git add -u
   git diff
   git add debian/control
   git commit -m "packaging, bumped Standards-Version from 3.9.4 to 3.9.6 for jessie support"

   returned="$(git status)"
   if [ "$returned" = "$nothing_to_commit_msg" ]; then
      true "press enter to continue_not"
      #read temp
      return
   fi

   true "press enter to continue"
   read temp

   true
}

pkg_debian_control_open() {
   kate "$item/debian/control"
}

pkg_git_submodule_file_writer() {
   echo "\
[submodule \"packages/$reponame\"]
        path = packages/$reponame
        url = https://github.com/Whonix/${reponame}.git
" >> ../".gitmodules"
}

pkg_git_log_giant_make() {
   #git shortlog 8.2..8.6.3.0 > giant_git_log

   echo "$item" >> "../../giant_git_log"
   git shortlog >> "../../giant_git_log"

   ## TODO
   #$(git describe)..master

   true
}

pkg_git_log_whonix11_whonix12() {
   if [ ! "$deleteonce" = "1" ]; then
      deleteonce="1"
      rm -f "../../changes"
   fi
   echo "$reponame" >> "../../changes"
   output="$(git --no-pager log --pretty="format:https://github.com/adrelanos/$reponame/commit/%h %s" Whonix11 Whonix12)"
   echo "$output" >> "../../changes"
   echo "" >> "../../changes"

   true
}

pkg_git_sign_and_push_tags() {
   repo_skip "whonix-developer-meta-files" || return 0

   true "${cyan}reponame: ${under}$reponame${eunder}${reset} 1/4 TODO"
   make git-commit-verify
   true "${cyan}reponame: ${under}$reponame${eunder}${reset} 1/4 done"

   true "${cyan}reponame: ${under}$reponame${eunder}${reset} 2/4 TODO"
   if ! make git-verify ; then
      true "${cyan}reponame: ${under}$reponame${eunder}${reset} 2/4 done"

      true "${cyan}reponame: ${under}$reponame${eunder}${reset} 3/4 TODO"
      make git-tag-sign
      true "${cyan}reponame: ${under}$reponame${eunder}${reset} 3/4 done"
   fi

   make git-verify

   true "${cyan}reponame: ${under}$reponame${eunder}${reset} 4/4 TODO"
   make git-tag-push
   true "${cyan}reponame: ${under}$reponame${eunder}${reset} 4/4 done"

   true
}

pkg_verify_signed_commit() {
   repo_skip "whonix-developer-meta-files" || return 0

   make git-commit-verify
   true
}

pkg_verify_signed_commit_and_tag() {
   repo_skip "whonix-developer-meta-files" || return 0

   make git-verify
   true
}

pkg_dput_cfg_writer() {
   make_get_variables

   launchpad_name="adrelanos"

   echo "\
[${reponame}]
fqdn			= ppa.launchpad.net
method			= sftp
incoming                = ~${launchpad_name}/${reponame}/ubuntu/
login			= ${launchpad_name}
allowed_distributions 	= trusty" >> /home/user/dput.cfg

   true
}

## debug-steps/packaging-helper-script pkg_need_version_bump_show 2>/dev/null
pkg_need_version_bump_show() {
   repo_skip "whonix-developer-meta-files" || return 0

   last_log_entry="$(git log --format=%s -1)"
   if [ "bumped changelog version" = "$last_log_entry" ]; then
      return 0
   fi
   echo "needs version bump: $item"
   true
}

## debug-steps/packaging-helper-script pkg_need_version_bump_do 2>/dev/null
pkg_need_version_bump_do() {
   repo_skip "whonix-developer-meta-files" || return 0

   last_log_entry="$(git log --format=%s -1)"
   if [ "bumped changelog version" = "$last_log_entry" ]; then
      return 0
   fi
   echo "needs version bump: $item"

   pkg_upstream_and_debian_changelog_bump

   true
}

pkg_upstream_and_debian_changelog_bump() {
   repo_skip "whonix-developer-meta-files" || return 0

   make deb-uachl-bumpup

   git add changelog.upstream
   git add debian/changelog
   git commit -m "bumped changelog version"

   true
}

pkg_add_lintian_watch_gpg_override() {
   mkdir --parents "./debian/source"
   echo "\
## https://phabricator.whonix.org/T277
debian-watch-may-check-gpg-signature" > "./debian/source/lintian-overrides"
}

pkg_git_commit_lintian_watch_gpg_override() {
   git add "./debian/source/lintian-overrides"
   local msg
   msg="\
added debian/source/lintian-overrides with debian-watch-may-check-gpg-signature to fix lintian warning - https://phabricator.whonix.org/T277"
   git commit -m "$msg"
   true
}

loop_helper() {
   for item in ./*; do
      if [ ! -d "$item" ]; then
         continue
      fi

      #set +x

      counter=$(( $counter + 1 ))
      true "item: $item | counter: $counter"

      reponame="$(basename "$item")"

      cd "$item"

      ${1+"$@"}

      cd ..

      true
      true
      true

      #true "press enter to continue_did"
      #read temp
   done
}

main() {
   if [ "${1+"$@"}" = "" ]; then
      true "INFO: Available functions..."
      typeset -f | awk '/ \(\) $/ && !/^main / {print $1}' | grep -E "^pkg_*"
      true "INFO: syntax: ./$0 function-name"
   else
      loop_helper ${1+"$@"}
   fi
}

main ${1+"$@"}
