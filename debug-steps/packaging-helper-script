#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -o pipefail

build_all_error_handler() {
   : echo "
${red}${bold}BASH_COMMAND${reset}: $BASH_COMMAND
${red}${bold}ERROR $0: | caller: $(caller)${reset}
"
   echo "Press enter to continue or ctrl +c to break or enter to continue."
   read temp
}

trap "build_all_error_handler" ERR

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd ..

counter=0

xxx="# On branch master
nothing to commit (working directory clean)"

echo_links() {
   trap "build_all_error_handler" ERR

   echo "https://github.com/Whonix/$reponame"
   #echo "https://github.com/adrelanos/$reponame"
}

add_remotes() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   git remote add adre git@github.com:adrelanos/$reponame.git
   git remote add troubadoour git@github.com:troubadoour/$reponame.git
   git remote add origin git@github.com:Whonix/$reponame.git
   git remote -v
}

generic_readme_copy() {
   echo "$item" | grep --quiet "whonix"
   if [ "$?" = "0" ]; then
      true "skipped $item"
      return
   fi

   trap "build_all_error_handler" ERR

   #echo "cp ./anon-apt-sources-list/README.md "$item/""
   cp ./anon-apt-sources-list/README.md "$item/"
}

copy_packaging() {
   trap "build_all_error_handler" ERR

   true "cp "./anon-apt-sources-list/build" "$item/""
   true "cp "./anon-apt-sources-list/clean" "$item/""
   true "cp "./anon-apt-sources-list/CONTRIBUTING.md" "$item/""
   true "cp "./anon-apt-sources-list/GPLv3" "$item/""
   true "cp "./anon-apt-sources-list/Makefile" "$item/""
   true "cp "./anon-apt-sources-list/.gitattributes" "$item/""

   #cp "./anon-apt-sources-list/build" "$item/"
   #cp "./anon-apt-sources-list/clean" "$item/"
   #cp "./anon-apt-sources-list/CONTRIBUTING.md" "$item/"
   #cp "./anon-apt-sources-list/GPLv3" "$item/"
   #cp "./anon-apt-sources-list/Makefile" "$item/"
   #cp "./anon-apt-sources-list/.gitattributes" "$item/"
}

push_remotes() {
   trap "build_all_error_handler" ERR

   git push origin master
   #git push adre master
}

git_diff_and_commit() {
   trap "build_all_error_handler" ERR

   cd "$item"

   returned="$(git status)"
   if [ "$returned" = "$xxx" ]; then
      cd ..
      #true "press enter to continue_not"
      #read temp
      return
   fi

   #git add -A
   git add README.md
   #git diff --cached
   #true "enter commit message!"
   #read msg
   if [ "$msg" = "" ]; then
      msg="readme"
   fi
   if [ "$msg" = "x" ]; then
      cd ..
      #true "press enter to continue_abort"
      #read temp
      return
   fi
   git commit -a -m "$msg"
   git status
   cd ..
}

for item in ./*; do
   if [ ! -d "$item" ]; then
      continue
   fi

   #set +x

   counter=$(( $counter + 1 ))
   true "item: $item | counter: $counter"

   #generic_readme_copy
   git_diff_and_commit

   true
   true
   true

   #true "press enter to continue_did"
   #read temp

done
