#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -o pipefail

build_all_error_handler() {
   : echo "
${red}${bold}BASH_COMMAND${reset}: $BASH_COMMAND
${red}${bold}ERROR $BASH_SOURCE: | caller: $(caller)${reset}
"
   echo "Press enter to continue or ctrl +c to break or enter to continue."
   read temp
}

trap "build_all_error_handler" ERR

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd ..
cd Whonix
cd packages

counter=0

nothing_to_commit_msg="# On branch master
nothing to commit (working directory clean)"

## copied from make-helper.bsh
get_variables() {
   command -v dpkg-parsechangelog >/dev/null
   OIFS="${IFS}"
   NIFS=$'\n'
   IFS="${NIFS}"
   for line in $(dpkg-parsechangelog); do
      ## Example line:
      ## Version: 0.1-1
      IFS="${OIFS}"
      read -r first second _ <<< "$line"
      ## Example first:
      ## Version:
      ## Example second:
      ## 0.1-1
      first="${first,,}"
      ## Example first:
      ## version
      if [ "$first" = "version:" ]; then
         version="$second"
         ## Example version:
         ## 3:0.1-1
         revision="${version#*-}"
         ## Example revision:
         ## 1
         version="${version%-*}"
         ## Example version:
         ## 3:0.1
         version="${version#*:}"
         ## Example version:
         ## 0.1
         break
      fi
   done
   IFS="${OIFS}"
   if [ "$version" = "" ]; then
      true "ERROR: variable version is empty."
      exit 1
   fi
   main_package_name="$mydir"
   if [ "$main_package_name" = "" ]; then
      true "ERROR: variable main_package_name is empty."
      exit 1
   fi
   main_deb_file="../${main_package_name}_${version}-${revision}_all.deb"

   local grep_output line a package
   grep_output="$(grep "Package:" "debian/control")"
   ## Example: grep_output
   ## Package: anon-shared-packages-dependencies
   ## Package: anon-shared-packages-recommended

   package_list="$main_package_name"

   OIFS="$IFS"
   NIFS=$'\n'
   IFS="$NIFS"
   for line in $grep_output; do
      IFS="$OIFS"
      read a package _ <<< "$line"
      if [ "$package" = "$main_package_name" ]; then
         continue
      fi
      package_list="$package_list $package"
   done
   IFS="$OIFS"
}

make_readme() {
   trap "build_all_error_handler" ERR

   if [ ! -f "$item/debian/control" ]; then
      true "No file"
      return
   fi

   generic_readme="../../whonix-developer-meta-files/README_generic.md"
   test -f "$generic_readme"

   local readme_file line first_word matched
   readme_file="$item/README.md"
   rm --force "$readme_file"

   matched="false"

   while read -r line; do
      read -r first_word _ <<< "$line"
      if [ "$matched" = "true" ]; then
         if [ "$line" = "." ]; then
            echo "" >> "$readme_file"
         else
            echo "$line" >> "$readme_file"
         fi
      fi
      if [ "$first_word" = "Description:" ]; then
         matched="true"
         line_with_keyword="$(echo "$line" | awk -F ":" '{ print $2 }')"
         echo "#$line_with_keyword #" >> "$readme_file"
         echo "" >> "$readme_file"
      fi
   done < "$item/debian/control"

   echo "" >> "$readme_file"
   echo '(This package description has been [automatically](https://github.com/Whonix/whonix-developer-meta-files/blob/master/debug-steps/packaging-helper-script) extracted and mirrored from `debian/control`.)' >> "$readme_file"
   echo "" >> "$readme_file"

   if [ -d "$item/man" ]; then
      echo "# Manual Page #" >> "$readme_file"
      echo "" >> "$readme_file"
      echo 'See also `man` folder for more information.' >> "$readme_file"
      echo "" >> "$readme_file"
   fi

   while read -r line; do
      echo "$line" >> "$readme_file"
   done < "$generic_readme"

   true "Done: $readme_file"
}

echo_links() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   echo "https://github.com/Whonix/$reponame"
   #echo "https://github.com/adrelanos/$reponame"
}

echo_names() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   echo "$reponame"
}

open_links() {
   trap "build_all_error_handler" ERR

   torbrowser --new-tab "$(echo_links)"
}

add_twitter_to_github() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"

#   echo "\
#{
#  "name": "web",
#  "active": true,
#  "events": [
#    "push",
#    "pull_request"
#  ],
#  "config": {
#    "url": "http://example.com/webhook",
#    "content_type": "json"
#  }
#}" > /tmp/xxx789

   echo "\
 {
    \"name\": \"twitter\",
    \"events\": [
      \"push\"
    ],
    \"supported_events\": [
      \"push\"
    ],
    \"title\": \"Twitter\",
    \"schema\": [
      [
        \"string\",
        \"1280368298-pfu7jKs5EwAq8JUlce9efKVURNIzH7BwtQkv78F\"
      ],
      [
        \"string\",
        \"NLRQlofXcg78Oo8B4ATmtQ3Njhx4rn9O4enWhSs\"
      ],
      [
        \"false\",
        \"digest\"
      ],
      [
        \"boolean\",
        \"short_format\"
      ]
    ]
  }" > /tmp/xxx789


   #POST /repos/:owner/:repo/hooks

   #curl -X POST -d @/tmp/xxx789 http://example.com/path/to/resource --header "Content-Type:application/json"

   #curl -v -u adrelanos:$gh_token -X POST https://api.github.com/authorizations --data @/tmp/xxx789

   curl -v -H "Authorization: token $gh_token" -X POST https://api.github.com/orgs/Whonix/repos --data @/tmp/xxx789

   true "press enter"
   read temp
}

add_remotes() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git remote rm adre || true
   git remote rm troubadoour || true
   git remote rm origin || true
   git remote add adre git@github.com:adrelanos/$reponame.git
   git remote add troubadoour git@github.com:troubadoour/$reponame.git
   git remote add origin git@github.com:Whonix/$reponame.git
   git remote -v
   cd ..
}

add_branch_nine() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git checkout master
   git branch Whonix9
   cd ..
}

checkout_branch_nine() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git checkout Whonix9
   cd ..
}

checkout_branch_master() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git checkout master
   cd ..
}

diff_branch_master() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git diff master
   cd ..
}

diff_branch_development() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"
   cd "$reponame"
   git diff development || true
   cd ..
}

copy_packaging() {
   trap "build_all_error_handler" ERR

   #true "cp "./anon-apt-sources-list/CONTRIBUTING.md" "$item/""
   #true "cp "./anon-apt-sources-list/GPLv3" "$item/""
   #true "cp "./anon-apt-sources-list/Makefile" "$item/""
   #true "cp "./anon-apt-sources-list/make-helper.bsh" "$item/""
   #true "cp "./anon-apt-sources-list/.gitattributes" "$item/""

   #cp "./anon-apt-sources-list/CONTRIBUTING.md" "$item/"
   #cp "./anon-apt-sources-list/GPLv3" "$item/"
   #cp "./anon-apt-sources-list/Makefile" "$item/"
   #cp "./anon-apt-sources-list/make-helper.bsh" "$item/"
   #cp "./anon-apt-sources-list/.gitattributes" "$item/"

   true
}

bump_debian_changelog_version() {
   trap "build_all_error_handler" ERR

   cd "$item"

   make deb-chl-bumpup

   cd ..

   true
}

diff_common_packaging_files() {
   trap "build_all_error_handler" ERR

   diff "./anon-apt-sources-list/CONTRIBUTING.md" "$item/"
   diff "./anon-apt-sources-list/GPLv3" "$item/"
   diff "./anon-apt-sources-list/Makefile" "$item/"
   diff "./anon-apt-sources-list/make-helper.bsh" "$item/"
   diff "./anon-apt-sources-list/.gitattributes" "$item/"
   diff "./anon-apt-sources-list/debian/source/format" "$item/debian/source/format"
   diff "./anon-apt-sources-list/debian/compat" "$item/debian/compat"
   diff "./anon-apt-sources-list/debian/gain-root-command" "$item/debian/gain-root-command"

   if [ ! -f "$item/debian/changelog" ]; then
      error "$item/debian/changelog does not exist."
   fi
   if [ ! -f "$item/debian/control" ]; then
      error "$item/debian/control does not exist."
   fi
   if [ ! -f "$item/debian/copyright" ]; then
      error "$item/debian/copyright does not exist."
   fi
   if [ ! -f "$item/debian/rules" ]; then
      error "$item/debian/rules does not exist."
   fi
   if [ ! -f "$item/debian/watch" ]; then
      error "$item/debian/watch does not exist."
   fi
   if [ ! -f "$item/README.md" ]; then
      error "$item/README.md does not exist."
   fi
}

push_remotes() {
   trap "build_all_error_handler" ERR

   cd "$item"

   git push origin master &
   git_pid="$!"
   #wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   git push adre master &
   git_pid="$!"
   #wait "$git_pid"
   git_pid_list="$git_pid_list $git_pid"

   #git push origin Whonix9 &
   #git_pid="$!"
   #wait "$git_pid"
   #git_pid_list="$git_pid_list $git_pid"

   #git push adre Whonix9 &
   #git_pid="$!"
   #wait "$git_pid"
   #git_pid_list="$git_pid_list $git_pid"

   cd ..
}

git_commit_readme() {
   trap "build_all_error_handler" ERR

   cd "$item"
   git add README.md
   git add debian/changelog
   git diff --cached
   msg="readme"
   git commit -m "$msg" || true
   git status
   cd ..
}

git_commit_changelog() {
   trap "build_all_error_handler" ERR

   cd "$item"
   git add debian/changelog
   msg='Updated debian/changelog.'
   git commit -m "$msg"
   git status
   cd ..
}

git_commit_packaging() {
   trap "build_all_error_handler" ERR

   cd "$item"
   git add Makefile
   git add make-helper.bsh
   msg="packaging"
   git commit -m "$msg" || true
   git status
   cd ..
}

git_diff_and_commit() {
   trap "build_all_error_handler" ERR

   cd "$item"

   #git reset --hard
   #cd ..
   #continue

   ## Remove extra new lines.
   ## Thanks to llua http://unix.stackexchange.com/a/81689
   #a=$(<debian/rules); printf '%s\n' "$a" > debian/rules
   #cd ..
   #continue

   returned="$(git status)"
   if [ "$returned" = "$nothing_to_commit_msg" ]; then
      cd ..
      true "press enter to continue_not"
      #read temp
      return
   fi

   #git add -A
   #git add -u
   #git diff --cached
   #git commit -a -m "bump version number"
   #git status

   #git diff

   cd ..
}

open_debian_control() {
   trap "build_all_error_handler" ERR

   kate "$item/debian/control"
}

git_submodule_file_writer() {
   trap "build_all_error_handler" ERR

   reponame="$(basename "$item")"

   echo "\
[submodule \"packages/$reponame\"]
        path = packages/$reponame
        url = https://github.com/Whonix/${reponame}.git
" >> ../".gitmodules"
}

git_make_giant_log() {
   trap "build_all_error_handler" ERR

   #git shortlog 8.2..8.6.3.0 > giant_git_log

   cd "$item"

   echo "$item" >> "../../giant_git_log"
   git shortlog >> "../../giant_git_log"

   ## TODO
   #$(git describe)..master

   cd ..
}

git_tags() {
   trap "build_all_error_handler" ERR

   cd "$item"

   mydir="$item"
   get_variables
   reponame="$(basename "$item")"
   version_and_revision="$version-$revision"

   true "version_and_revision: $version_and_revision"

   git tag -s "$version_and_revision" -m "."
   git push origin "$version_and_revision" &
   git push adre "$version_and_revision" &

   cd ..
}

dput_cfg_writer() {
   trap "build_all_error_handler" ERR

   cd "$item"

   mydir="$item"
   get_variables
   reponame="$(basename "$item")"

   launchpad_name="adrelanos"

   echo "\
[${reponame}]
fqdn			= ppa.launchpad.net
method			= sftp
incoming                = ~${launchpad_name}/${reponame}/ubuntu/
login			= ${launchpad_name}
allowed_distributions 	= trusty" >> /home/user/dput.cfg

   cd ..
}

for item in ./*; do
   if [ ! -d "$item" ]; then
      continue
   fi

   #set +x

   counter=$(( $counter + 1 ))
   true "item: $item | counter: $counter"

   #copy_packaging
   #diff_common_packaging_files
   #bump_debian_changelog_version
   #open_links
   #make_readme
   #git_commit_readme
   #git_commit_changelog
   #git_commit_packaging
   #git_diff_and_commit
   #push_remotes
   #open_debian_control
   #git_submodule_file_writer
   #add_remotes
   #echo_links
   #echo_names
   #add_twitter_to_github
   #git_make_giant_log
   #git_tags
   #add_branch_nine
   #checkout_branch_nine
   #checkout_branch_master
   #diff_branch_master
   #diff_branch_development

   #kate "$item/debian/rules" >/dev/null 2>&1

   true
   true
   true

   #true "press enter to continue_did"
   #read temp

done
