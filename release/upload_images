#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

## disable cmd line parser, since not needed
export whonix_build_one_parsed="1"
export VMNAME="internalrun"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$MYDIR"

source ../../../help-steps/pre
source ../../../help-steps/colors
source ../../../help-steps/variables

#"$whonix_dev_meta_files_folder/release/rsync-test"
#true "${cyan}INFO: Press any enter to continue.${reset}"
#read temp

[ -n "$version" ] || version="$anon_dist_build_version"

true "${cyan}INFO: Press any enter to continue.${reset}"
read temp

if [ "$version" = "" ]; then
   error "Variable version is empty."
fi

if [ "$server" = "" ]; then
   server="root@whonix.org:/var/rsync/linux"
fi

#server="root@whonix.org:/home/hulahoop/libvirt"

if [ "$server" = "" ]; then
   error "Variable server is empty."
fi

server_with_version="$server/$version/"

for extension in "torrent" "sha256sums" "sha512sums" "ova" "libvirt.xz" "asc" ; do
   result="$(find "$WHONIX_BINARY" -maxdepth 1 -type f -name "*.$extension" -printf '%p\n')"
   if [ "$result" == "" ]; then
      continue
   fi
   if [ "$file_list" = "" ]; then
      file_list="$result"
   else
      file_list="\
$file_list
$result"
   fi
done

true "file_list:
$file_list"

true "${cyan}INFO: Press any enter to continue.${reset}"
read temp

## Test.
rsync \
   --dry-run \
   $rsync_opts \
   $file_list \
   "$server_with_version"

true "${cyan}INFO: Press any enter to continue.${reset}"
read temp

attempts_counter="0"
attempts_max="10"

while true; do
   attempts_counter="$(( $attempts_counter + 1 ))"

   rsync_exit_code="0"
   rsync \
      $rsync_opts \
      $file_list \
      "$server_with_version" \
      || { rsync_exit_code="$?" ; true; };

   if [ "$rsync_exit_code" = "0" ]; then
      break
   fi

   if [ "$attempts_counter" -ge "$attempts_max" ]; then
      msg="${bold}${red}INFO: Upload failed.${reset}"
      true "$msg"
      error "$msg"
      break
   fi

   sleep 10

done
